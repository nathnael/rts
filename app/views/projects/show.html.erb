<!-- Content Header (Page header) -->
<div class="content-header">
  <div class="container-fluid">
    <div class="row mb-2">
      <div class="col-sm-12">
        <h1 class="m-0 text-dark">Projects</h1>
      </div><!-- /.col -->      
    </div><!-- /.row -->
    <div class="row mb-2">
      <div class="col-sm-10">
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="/">Home</a></li>
          <li class="breadcrumb-item active">Show Project</li>
        </ol>
      </div><!-- /.col -->
      <div class="col-sm-2">
        <div class="title-action float-sm-right">
          <%= link_to 'Back', projects_path, :class => "btn btn-default" %>
        </div>
      </div><!-- /.col -->
    </div>
  </div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->
<!-- Main content -->
<section class="content">
  <div class="container-fluid">
    <div class="row">
      <div class="col-md-12">
        <div class="card card-primary">
          <div class="card-body">       
            <div class="row">
              <div class="form-group col-2">
                <label>Name:</label>
                <input type="text" value="<%= @project.name %>" class="form-control" placeholder="N/A" disabled>
              </div>
              <div class="form-group col-2">
                <label>Client:</label>
                <input type="text" value="<%= @client.name %>" class="form-control" placeholder="N/A" disabled>
              </div>
              <div class="form-group col-2">
                <label>Start date:</label>
                <input type="text" value="<%= @project.start_date.to_date.to_formatted_s(:long_ordinal) %>" class="form-control" placeholder="N/A" disabled>
              </div>
              <div class="form-group col-2">
                <label>End date:</label>
                <input type="text" value="<%= @project.end_date.to_date.to_formatted_s(:long_ordinal) %>" class="form-control" placeholder="N/A" disabled>
              </div>
              <div class="form-group col-2">
                <label>Status:</label>
                <input type="text" value="<%= @project.status.humanize %>" class="form-control" placeholder="N/A" disabled>
              </div>
              <div class="form-group col-2 mt-4">
                <%= link_to 'Edit', edit_project_path(@project), :class => 'btn btn-primary' %>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="col-12">
        <div class="card card-primary card-outline card-outline-tabs">
          <div class="card-header p-0 border-bottom-0">
            <ul class="nav nav-tabs" id="custom-tabs-three-tab" role="tablist">
              <li class="nav-item">
                <a class="nav-link active" id="custom-tabs-three-project-requirement-tab" data-toggle="pill" href="#custom-tabs-three-project-requirement" role="tab" aria-controls="custom-tabs-three-project-requirement" aria-selected="true">Project Requirement</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" id="custom-tabs-three-assigned-excellers-tab" data-toggle="pill" href="#custom-tabs-three-assigned-excellers" role="tab" aria-controls="custom-tabs-three-assigned-excellers" aria-selected="false">Assigned Excellers</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" id="custom-tabs-three-sample-code-tab" data-toggle="pill" href="#custom-tabs-three-sample-code" role="tab" aria-controls="custom-tabs-three-sample-code" aria-selected="false">Sample Code</a>
              </li>
            </ul>
          </div>
          <div class="card-body">
            <div class="tab-content" id="custom-tabs-three-tabContent">
              <div class="tab-pane fade active show" id="custom-tabs-three-project-requirement" role="tabpanel" aria-labelledby="custom-tabs-three-project-requirement-tab">
                <a class="btn btn-primary float-right mb-3" data-project-id="<%= @project.id.to_s %>" data-target="#add-pr" data-toggle="modal" style="color: white">
                  <i class="fa fa-plus"></i> Add New Project Requirement
                </a>
                <table id="example" class="display" style="width:100% !important">
                    <thead>
                      <tr>
                        <th></th>
                        <th>PR ID</th>
                        <th>SKT ID</th>
                        <th>Skill Type</th>
                        <th>Number of Excellers</th>            
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Progress</th>                      
                        <th></th>                      
                      </tr>
                    </thead>
                    <tfoot>
                      <tr>
                        <th></th>
                        <th>PR ID</th>
                        <th>SKT ID</th>
                        <th>Skill Type</th>
                        <th>Number of Excellers</th>            
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Progress</th>                    
                        <th></th>                    
                      </tr>
                    </tfoot>
                </table> 
              </div>
              <div class="tab-pane fade" id="custom-tabs-three-assigned-excellers" role="tabpanel" aria-labelledby="custom-tabs-three-assigned-excellers-tab">
                <div class="container-fluid">
                  <div class="row">
                      <div class="col-md-12">
                        <h3>Assigned Excellers</h3>
                        <p>Move potential excellers through the swimlanes to assign them to this project.</p>
                        <div id="myKanban"></div>
                      </div>
                  </div>
                </div>
              </div>
              <div class="tab-pane fade" id="custom-tabs-three-sample-code" role="tabpanel" aria-labelledby="custom-tabs-three-sample-code-tab">
                <table class="table">
                  <thead>
                    <tr>
                      <th>Skill Type</th>
                      <th>Number of Excellers</th>            
                      <th>Start Date</th>
                      <th>End Date</th>
                      <th>Progress</th>
                      <th>Actions</th>
                    </tr>
                  </thead>
                  <tbody id="projectRequirementsTableBody">

                    <% @project_requirements&.each do |project_requirement| %>
                    
                    <tr class="project-requirements-line">                                          
                      <td>                             
                        <input name="project[project_requirements[][project_requirement_id]]" id="project_requirement_id_input"  value="<%= project_requirement&.id %>" class="form-control" style="display: none"/>                   
                        <input name="show_skill_set" id="project_requirements-select" value="<%= project_requirement&.skill_type&.name %>" class="form-control" readonly/>
                      </td>
                      <td>
                        <input name="project[project_requirements[][amount]]" value="<%= project_requirement&.amount %>" class="form-control" readonly/>                      
                      </td>
                      <td>
                        <input name="project[project_requirements[][start_date]]" value="<%= project_requirement&.start_date %>" class="form-control gregorian_datepicker" readonly/>                      
                      </td>
                      <td>
                        <input name="project[project_requirements[][end_date]]" value="<%= project_requirement&.end_date %>" class="form-control gregorian_datepicker" readonly/>                      
                      </td>
                      <td>
                        <div class="progress progress-mini">
                          <div class="progress-bar" style="width: 40%;"></div>
                        </div>
                      </td>
                      <td>
                        <a href="#" class="remove-project_requirements"><i class="fa fa-times"></i></a>
                      </td>
                    </tr>
                      
                    <% end %>
                    <tr>                                           
                      <td>
                        <input name="project[project_requirements[][project_id]]" id="project_id_input" value="<%= @project&.id %>" class="form-control" style="display: none"/>  
                        <%= select_tag 'project[project_requirements[][skill_type_id]]',  options_from_collection_for_select( SkillType.all, 'id', 'name' ) , { :prompt => "-- Choose --",  'data-parsley-required' => 'true', :class => 'form-control', :id => 'skill_type_select'} %>
                      </td> 
                      <td>
                        <input id="amount_input" name="project[project_requirements[][amount]]" type="number" step="any" class="form-control" data-parsley-required/>
                      </td>  
                      <td>
                        <input id="start_date_input" name="project[project_requirements[][start_date]]" type="text" value="<%= @project.start_date %>" class="form-control gregorian_datepicker" placeholder="N/A" />
                      </td>  
                      <td>
                        <input id="end_date_input" name="project[project_requirements[][end_date]]" type="text" value="<%= @project.end_date %>" class="form-control gregorian_datepicker" placeholder="N/A" />
                      </td>  
                      <td>
                        <div class="progress progress-mini">
                          <div class="progress-bar" style="width: 0%;"></div>
                        </div>
                      </td>           
                      <td>
                          <a href="#" class="btn btn-primary" id="add-project-requirements-line">Add</a>
                      </td>
                    </tr>
                  </tbody>            
                </table>
              </div>
            </div>
          </div>
          <!-- /.card -->
        </div>
      </div>
    </div>
  </div>
</section>


<div class="modal fade" tabindex="-1" role="dialog" id="add-pr">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">New Project Requirement</h4>
        <button type="button" class="close float-right" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>        
      </div>
      <div class="modal-body">   

        <form role="form" method="POST" enctype="multipart/form-data" action="/projects/async_save_project_requirements" >
          <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
          <%= hidden_field_tag :id, params[:id], class: "", :name => "id", :required => true, :display => false  %>
          <%= hidden_field_tag :id, params[:id], class: "", :name => "project[add_project_requirement[project_id]]", :required => true, :display => false  %>
          <div class="form-group">
            <label for="transporter">Skill type
              <span class="required">*</span>
            </label>
            <div>
              <%= select("project[add_project_requirement[skill_type_id]]", "project[add_project_requirement[skill_type_id]]", SkillType.where.not(id: @existing_skill_types) .collect{|t| [t.name, t.id ]}, {prompt: '-- Choose --'}, {:class => 'form-control', :required => true, :name => 'project[add_project_requirement[skill_type_id]]', :id => 'skill_type_id' }) %>
            </div>
          </div>

          <div class="form-group">
            <label for="transporter">Number of Excellers
              <span class="required">*</span>
            </label>
            <div>
              <input id="amount" name="project[add_project_requirement[amount]]" type="number" class="form-control" value="" required />
            </div>
          </div>

          <div class="form-group">
            <label for="transporter">Start date
              <span class="required">*</span>
            </label>
            <div>
              <input id="start_date" name="project[add_project_requirement[start_date]]" type="text" class="form-control gregorian_datepicker" value="" required />
            </div>
          </div>

          <div class="form-group">
            <label for="transporter">End date
              <span class="required">*</span>
            </label>
            <div>
              <input id="end_date" name="project[add_project_requirement[end_date]]" type="text" class="form-control gregorian_datepicker" value="" required />
            </div>
          </div>

          <div class="form-group">
            <div>
            <br>
                <input  type="hidden" name="att" id="att" value="" />
                <input type="submit" id="btnFormSubmit" class="btn btn-primary" value="Save" />
            </div>
          </div> 

        </form>
      </div>    
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<div class="modal fade" tabindex="-1" role="dialog" id="edit-pr">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Edit Project Requirement</h4>
        <button type="button" class="close float-right" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>        
      </div>
      <div class="modal-body">   

        <form role="form" method="POST" enctype="multipart/form-data" action="/projects/async_edit_project_requirement" >
          <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
          <%= hidden_field_tag :id, params[:id], class: "", :name => "id", :required => true, :display => false  %>
          <%= hidden_field_tag :project_id, params[:id], class: "", :name => "project[add_project_requirement[project_id]]", :required => true, :display => false  %>
          <%= hidden_field_tag :edit_project_requirement_id, "", class: "", :name => "project[add_project_requirement[id]]", :required => true, :display => false  %>
          <div class="form-group">
            <label for="transporter">Skill type
              <span class="required">*</span>
            </label>
            <div>
              <%= select("project[add_project_requirement[skill_type_id]]", "project[add_project_requirement[skill_type_id]]", SkillType.all .collect{|t| [t.name, t.id ]}, {prompt: '-- Choose --'}, {:class => 'form-control', :required => true, :name => 'project[add_project_requirement[skill_type_id]]', :id => 'edit_skill_type_id', :disabled => true }) %>
            </div>
          </div>

          <div class="form-group">
            <label for="transporter">Number of Excellers
              <span class="required">*</span>
            </label>
            <div>
              <input id="edit_amount" name="project[add_project_requirement[amount]]" type="number" class="form-control" value="" required />
            </div>
          </div>

          <div class="form-group">
            <label for="transporter">Start date
              <span class="required">*</span>
            </label>
            <div>
              <input id="edit_start_date" name="project[add_project_requirement[start_date]]" type="text" class="form-control gregorian_datepicker" value="" required />
            </div>
          </div>

          <div class="form-group">
            <label for="transporter">End date
              <span class="required">*</span>
            </label>
            <div>
              <input id="edit_end_date" name="project[add_project_requirement[end_date]]" type="text" class="form-control gregorian_datepicker" value="" required />
            </div>
          </div>

          <div class="form-group">
            <div>
            <br>
                <input  type="hidden" name="att" id="att" value="" />
                <input type="submit" id="btnFormSubmit" class="btn btn-primary" value="Update" />
            </div>
          </div> 

        </form>
      </div>    
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<div class="modal fade" tabindex="-1" role="dialog" id="update-pri">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Update Project Requirement Item</h4>
        <button type="button" class="close float-right" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>        
      </div>
      <div class="modal-body">   

        <form role="form" method="POST" enctype="multipart/form-data" action="/projects/async_update_project_requirement_item" >
          <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
          <%= hidden_field_tag :id, params[:id], class: "", :name => "id", :required => true, :display => false  %>
          <input type="hidden" name="project[project_requirement_item[id]]" id="pri_id" value="" class="" required="required" display="false">
          <input type="hidden" name="project[project_requirement_item[skill_id]]" id="pri_skill_id" value="" class="" required="required" display="false">
          <input type="hidden" name="project[project_requirement_item[description]]" id="pri_description" value="" class="" required="required" display="false">

          <div class="form-group">
            <label for="transporter">Skill
            </label>
            <div>
              <input id="pri_skill_name" name="project[project_requirement_item[skill_name]]" type="text" class="form-control" value="" disabled="disabled" />
            </div>
          </div>

          <div class="form-group">
            <label for="transporter">Minimum score
              <span class="required">*</span>
            </label>
            <div>
              <input id="pri_minimum_score" name="project[project_requirement_item[minimum_score]]" type="number" step=".01" class="form-control" value="" required />
            </div>
          </div>

          <div class="form-group">
            <div>
              <br>
              <input type="submit" id="" class="btn btn-primary" value="Save" />
            </div>
          </div> 

        </form>
      </div>    
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<script>
$(document).ready(function() {
  var REMOVE_dispatchLINE_BTN = '<a href="#" class="remove-project_requirements"><i class="fa fa-times"></i></a>';
  var project = $('#project_id_input').val();

  $('#projectRequirementsTableBody').on('click', '.remove-project_requirements', function(e) { 
    ie8SafePreventEvent(e); 
    
    var pr_id = $(this).closest('tr').find('#project_requirement_id_input').val(); 
    alert("pr_id: " + pr_id);
    $.ajax({
        url:'/projects/async_remove_project_requirement',
        type:'POST',
        dataType:'json',
        data:{
          project: {
            project_requirement_id: pr_id
          }	            
        },
        before: function() {
        
        },
        success:function(data){
          // console.log(data);	
          if(!data){                   
            return;
          }   
          $(e.target).closest('tr').fadeOut('slow', function(){
            $(this).remove();
          });                        
        },
        error:function(data){
            console.log(data);
        }
      });
    
  });

  $('#submit-interview').click( function(e) {
    if( $('.project-requirements-line').length === 0 ) {
      toastr.error("You need to add atleast one criteria."); 
      e.preventDefault();
      return; 
    }
  });

  $("#add-project-requirements-line").click( function(e) { 
    e.preventDefault(); 
    var $this = $(this); 
    
    var skill_type = $('#skill_type_select').val();
    var amount = $('#amount_input').val();
    var start_date = $('#start_date_input').val();
    var end_date = $('#end_date_input').val();

    var $this = $(this); 

    var $projectRequirementsForm = $this.closest('tr'); 

    if( project!="" && skill_type!="" && amount!="" && start_date!="" && end_date!="")
    {
      $.ajax({
        url:'/projects/async_save_project_requirement',
        type:'POST',
        dataType:'json',
        data:{
          project: {
            project_id: project,
            skill_type_id: skill_type,
            no_of_excellers: amount,
            start_date: start_date,
            end_date: end_date
          }	            
        },
        before: function() {
        
        },
        success:function(data){
          // console.log(data);	
          if(data==null && data==''){                
            return;
          }   
          

          var $projectRequirementsForm = $this.closest('tr'); 
          
          var $newRow = $projectRequirementsForm.clone();

          $newRow.find('td').last().html(REMOVE_dispatchLINE_BTN); 

          $newRow.find('#skill_type_select').val(skill_type); 

          $newRow.find('#project_requirement_id_input').val(data);           

          $newRow.find(':input').attr('readonly', true).removeAttr('id'); 

          $newRow.addClass('project-requirements-line');

          $newRow.insertBefore( $projectRequirementsForm); 

          $projectRequirementsForm.find(':input').val('');                         
        },
        error:function(data){
            console.log(data);
        }
      });
      
    }
    
  }); 

  
  $.ajax({
    url: "/projects/async_get_project_requirements",
    type:'POST',
    data:{
      project: {
        project_id: project
      }	            
    },
    dataType: 'json',
    success: function(data){
      console.log("Data: " + JSON.stringify(data));

      var table = $('#example').DataTable({
          data: data,
          columns: [
            {
                "className":      'details-control',
                "orderable":      false,
                "data":           null,
                "defaultContent": ''
            },
            { data: 'pr_id' },
            { data: 'skt_id' },
            { data: 'skill_type_name' },
            { data: 'amount' },
            { data: 'start_date' },
            { data: 'end_date' },
            { data: 'progress' },
            { data: 'progress' }
          ],
          columnDefs: [
            {
                "targets": [ 1, 2 ],
                "visible": false,
                "searchable": false
            },
            {                
              targets: 8, 
              render: function (data, type, row, meta) {
                console.log("skt_id: " + JSON.stringify(row.pr_id));
                  return '<a class="btn btn-warning ml-1 mr-1 pr-edit" id=e-"' + data + '" data-target="#edit-pr" data-toggle="modal" data-pr-id="'+row.pr_id+'" data-skt-id="'+row.skt_id+'" data-skill-type-name="'+row.skill_type_name+'" data-amount="'+row.amount+'"  data-start-date="'+row.start_date+'"  data-end-date="'+row.end_date+'"><i class="fa fa-edit" aria-hidden="true"></i>  Edit  </a><a class="btn btn-danger ml-1 mr-1 pr-delete" data-confirm="Are you sure?" rel="nofollow" data-method="delete" href="/projects/delete_pr/'+row.pr_id+'"><i class="fa fa-archive" aria-hidden="true"></i>Delete</a>';
              }
            }
          ],
          
      });

      $( table.table().container() ).removeClass( 'form-inline' );

      $('#example tbody').on('click', '.pr-edit', function () {
        var data_pr_id = $(this).attr("data-pr-id");
        var data_skt_id = $(this).attr("data-skt-id");
        var data_skill_type_name = $(this).attr("data-skill-type-name");
        var data_amount = $(this).attr("data-amount");
        var data_start_date = $(this).attr("data-start-date");
        var data_end_date = $(this).attr("data-end-date");
        
        $("#edit_project_requirement_id").val(data_pr_id);
        $("#edit_skill_type_id").val(data_skt_id);
        $("#edit_amount").val(data_amount);
        $("#edit_start_date").val(data_start_date);
        $("#edit_end_date").val(data_end_date);        
      });
        
      // $('#example tbody').on('click', '.pr-delete', function () {
      //   var id = $(this).attr("id").match(/\d+/)[0];
      //   alert("Delete id: " + id);

      // });

      $('#example tbody').on('click', '.pri-update', function () {
        var id = $(this).attr("data-id");
        var data_skill_name = $(this).attr("data-skill-name");
        var data_minimum_score = $(this).attr("data-minimum-score");
        var data_skill_id = $(this).attr("data-skill-id");
        var data_description = $(this).attr("data-description");
        $("#pri_skill_id").val(data_skill_id);
        $("#pri_skill_name").val(data_skill_name);
        $("#pri_description").val((data_description === '' || data_description === null)  ? 'N/A' : data_description);
        $("#pri_minimum_score").val(data_minimum_score);
        $("#pri_id").val(id);
      });
      
      // Add event listener for opening and closing details
      $('#example tbody').on('click', 'td.details-control', function () {
          var tr = $(this).closest('tr');
          var row = table.row( tr );
  
          if ( row.child.isShown() ) {
              // This row is already open - close it
              row.child.hide();
              tr.removeClass('shown');
          }
          else {
              // Open this row
              // console.log("SKT ID: " + JSON.stringify(row.data().skt_id));
              
              $.ajax({
                url:'/projects/async_get_project_requirement_items',
                type:'POST',
                dataType:'json',
                data:{
                  project: {
                    project_requirement_id: row.data().pr_id,
                    skill_type_id: row.data().skt_id
                  }
                },
                before: function() {
                
                },
                success:function(data){
                  
                  if(data==null && data==''){
                    return;
                  }  
                  var rows = '<td><b>Skill name</b></td><td><b>Minimum score</b></td><td><b>Action</b></td>';
                  data.forEach(function(obj) {
                    // console.log('obj: ' + JSON.stringify(obj));	
                    rows = rows +  
                    '<tr>'+
                    // '<td style="visiblity: false">'+ obj.pri_id +'</td>'+
                    '<td>'+ obj.skill_name +'</td>'+
                    '<td>'+ obj.minimum_score +'</td>'+
                    '<td><input type="button" class="btn btn-default ml-1 mr-1 pri-update" data-target="#update-pri" data-toggle="modal" data-id="'+ obj.pri_id +'" data-skill-id="'+ obj.skill_id +'" data-skill-name="'+ obj.skill_name +'" data-minimum-score="'+ obj.minimum_score +'" data-description="'+ obj.description +'" value="Update"/></td>'+
                    '</tr>'        
                  });
                  
                  var result = '<table cellpadding="5" cellspacing="0" border="0" style="width:90%;margin-left:50px;">'+ rows +'</table>';
                  row.child( result ).show();
                  tr.addClass('shown');  
                },
                error:function(data){
                    console.log(data);
                }
              });
          }
          
      });  
      
    }
  });

  $('.gregorian_datepicker').calendarsPicker({
      format: 'DD, MM d, yyyy',
      onSelect: function(dateText, inst) {
          var dateAsObject = $(this).calendarsPicker('getDate');
          // var jd = dateAsObject[0].toJD();
          // var date_gc = $.calendars.fromJD(jd);
          $(this).val(dateAsObject[0].formatDate('DD, MM d, yyyy'));
      }
  });

  $('.ethiopian_datepicker').calendarsPicker({
      calendar: $.calendars.instance('ethiopian', 'am'),
      format: 'DD, MM d, yyyy',
      onSelect: function(dateText, inst) {
          var dateAsObject = $(this).calendarsPicker('getDate');
          var jd = dateAsObject[0].toJD();
          var date_gc = $.calendars.instance('ethiopian').fromJD(jd);
          $(this).val(date_gc.formatDate('DD, MM d, yyyy'));
      }
  });

  var KanbanTest = new jKanban({
        element : '#myKanban',
        gutter  : '10px',
        click : function(el){
            alert(el.innerHTML);
            alert(el.dataset.eid)
        },
        boards  :[
            {
                'id' : '_todo',
                'title'  : 'Potential Excellers',
                'class' : 'kanban-info',
                'item'  : [
                    {
                       'id':'task-1',
                        'title':'Nathnael Getahun',
                    },
                    {
                       'id':'task-2',
                        'title':'Abenezer Germande',
                    },
                    {
                       'id':'task-2',
                        'title':'Rediet Tsigebrehan',
                    },
                    {
                       'id':'task-2',
                        'title':'Rekik Assefa',
                    }
                ]
            },
            {
                'id' : '_working',
                'title'  : 'Assigned Excellers',
                'class' : 'kanban-success',
                'item'  : [
                    {
                       'id':'task-1',
                        'title':'Yonathan Woldeselassie',
                    },
                    {
                       'id':'task-2',
                        'title':'Henock Ayalew',
                    },
                    {
                       'id':'task-2',
                        'title':'Rediet Tsigebrehan',
                    },
                    {
                       'id':'task-2',
                        'title':'Rekik Assefa',
                    }
                ]
            }
        ]
    });

    var toDoButton = document.getElementById('addToDo');
    toDoButton.addEventListener('click',function(){
        KanbanTest.addElement(
            '_todo',
            {
                'title':'Test Add',
            }
        );
    });

    var addBoardDefault = document.getElementById('addDefault');
    addBoardDefault.addEventListener('click', function () {
        KanbanTest.addBoards(
            [{
                'id' : '_default',
                'title'  : 'Default (Can\'t drop in Done)',
                'dragTo':['_todo','_working'],
                'class' : 'kanban-error',
                'item'  : [
                    {
                        'title':'Default Item',
                    },
                    {
                        'title':'Default Item 2',
                    },
                    {
                        'title':'Default Item 3',
                    }
                ]
            }]
        )
    });

    var removeBoard = document.getElementById('removeBoard');
    removeBoard.addEventListener('click',function(){
        KanbanTest.removeBoard('_done');
    });
});
  function ie8SafePreventEvent(e){
    if(e.preventDefault){ e.preventDefault()}
    else{e.stop()};

    e.returnValue = false;
    e.stopPropagation();        
  } 
</script>